interactions:
- request:
    body: '{"messages": [{"role": "system", "content": "You are Auto-GPT, a multi-purpose
      AI assistant.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Write ''Hello World'' into a file
      named \"hello_world.txt\".\n\n\nConstraints:\n1. ~4000 word limit for short
      term memory. Your short term memory is short, so immediately save important
      information to files.\n2. If you are unsure how you previously did something
      or want to recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      execute_python_code: Creates a Python file and executes it, params: (code: string,
      name: string)\n2. execute_python_file: Executes an existing Python file, params:
      (filename: string)\n3. execute_shell: Executes a Shell Command, non-interactive
      commands only, params: (command_line: string)\n4. execute_shell_popen: Executes
      a Shell Command, non-interactive commands only, params: (query: string)\n5.
      append_to_file: Appends to a file, params: (filename: string, text: string)\n6.
      delete_file: Deletes a file, params: (filename: string)\n7. list_files: Lists
      Files in a Directory, params: (directory: string)\n8. read_file: Read an existing
      file, params: (filename: string)\n9. write_to_file: Writes to a file, params:
      (filename: string, text: string)\n10. google: Google Search, params: (query:
      string)\n11. web_search: Searches the web, params: (query: string)\n12. browse_website:
      Browses a Website, params: (url: string, question: string)\n13. goals_accomplished:
      Goals are accomplished and there is nothing left to do, params: (reason: string)\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n\nRespond
      with only valid JSON conforming to the following schema: \n{\"$schema\": \"http://json-schema.org/draft-07/schema#\",
      \"type\": \"object\", \"properties\": {\"thoughts\": {\"type\": \"object\",
      \"properties\": {\"text\": {\"type\": \"string\", \"description\": \"thoughts\"},
      \"reasoning\": {\"type\": \"string\"}, \"plan\": {\"type\": \"string\", \"description\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\"}, \"criticism\":
      {\"type\": \"string\", \"description\": \"constructive self-criticism\"}, \"speak\":
      {\"type\": \"string\", \"description\": \"thoughts summary to say to user\"}},
      \"required\": [\"text\", \"reasoning\", \"plan\", \"criticism\", \"speak\"],
      \"additionalProperties\": false}, \"command\": {\"type\": \"object\", \"properties\":
      {\"name\": {\"type\": \"string\"}, \"args\": {\"type\": \"object\"}}, \"required\":
      [\"name\", \"args\"], \"additionalProperties\": false}}, \"required\": [\"thoughts\",
      \"command\"], \"additionalProperties\": false}\n"}, {"role": "system", "content":
      "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role": "user", "content":
      "Determine exactly one command to use, and respond using the JSON schema specified
      previously:"}], "model": "gpt-3.5-turbo", "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '3633'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6RTTY/TMBC991eMfMklrVo2lLS3lTiQAwcECK3IqnKdaWJqe6J4ui2q8t+Rk7ZJ
        kQChveQwb96HozfnCYDQhViDUJVkZWszffeEx/Lj/onSbL6z2TJ7/yl52T6my/nqcyniwKDtD1R8
        Zc0U2doga3I9rBqUjEF1sUzTZJWs5m86wFKBJtDKmqcPs7dTPjRbms6Xi4cLsyKt0Is1fJ8AAJy7
        b8joCjyJNczj68Si97JEsb4tAYiGTJgI6b32LB2LeAAVOUbXxT7nDiAXXNGhrNjnQSWMuiGeOAxy
        8YXg2GhGiD6gMQTfqDFFBNoxgYSdNghOWiwgqgK+OQZ8xieOYshASQcHj8AVQtTpbJg2gRWBImul
        K2a5iK+2DUpPTrvy4v1nFkhj6OjBIvA1YQg9DjZWro10vegUvv490CD4308eO6pGs1ba2942g4Jc
        xFDJFwTpfsINhx01wJX2EEKOJXyNcn+lH7Ux//qXr4sebNu4b8VF8K4UgdmnuXMfBZZNOe5RGIWN
        gfib641637lR9j4VQNuFy10rLl1ub0ew0077atN3JxTbM9X9WjsBeO6O6nB3J6JuyNa8YdqjC5eW
        LpJeTwx3PKCL9HJygomlGYDVKpkEl3byCwAA//8DAH6r9z9FBAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7e1963b2acd16822-SEA
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 04 Jul 2023 18:21:45 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0613
      openai-organization:
      - user-f2nm2e6pozoftncap0fltljz
      openai-processing-ms:
      - '3301'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86898'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.068s
      x-request-id:
      - b19d17d035b82c20107fc8b68cdf2f3b
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are Auto-GPT, a multi-purpose
      AI assistant.\nYour decisions must always be made independently without seeking
      user assistance. Play to your strengths as an LLM and pursue simple strategies
      with no legal complications.\n\nGOALS:\n\n1. Write ''Hello World'' into a file
      named \"hello_world.txt\".\n\n\nConstraints:\n1. ~4000 word limit for short
      term memory. Your short term memory is short, so immediately save important
      information to files.\n2. If you are unsure how you previously did something
      or want to recall past events, thinking about similar events will help you remember.\n3.
      No user assistance\n4. Exclusively use the commands listed below e.g. command_name\n\nCommands:\n1.
      execute_python_code: Creates a Python file and executes it, params: (code: string,
      name: string)\n2. execute_python_file: Executes an existing Python file, params:
      (filename: string)\n3. execute_shell: Executes a Shell Command, non-interactive
      commands only, params: (command_line: string)\n4. execute_shell_popen: Executes
      a Shell Command, non-interactive commands only, params: (query: string)\n5.
      append_to_file: Appends to a file, params: (filename: string, text: string)\n6.
      delete_file: Deletes a file, params: (filename: string)\n7. list_files: Lists
      Files in a Directory, params: (directory: string)\n8. read_file: Read an existing
      file, params: (filename: string)\n9. write_to_file: Writes to a file, params:
      (filename: string, text: string)\n10. google: Google Search, params: (query:
      string)\n11. web_search: Searches the web, params: (query: string)\n12. browse_website:
      Browses a Website, params: (url: string, question: string)\n13. goals_accomplished:
      Goals are accomplished and there is nothing left to do, params: (reason: string)\n\nResources:\n1.
      Internet access for searches and information gathering.\n2. Long Term memory
      management.\n3. GPT-3.5 powered Agents for delegation of simple tasks.\n4. File
      output.\n\nPerformance Evaluation:\n1. Continuously review and analyze your
      actions to ensure you are performing to the best of your abilities.\n2. Constructively
      self-criticize your big-picture behavior constantly.\n3. Reflect on past decisions
      and strategies to refine your approach.\n4. Every command has a cost, so be
      smart and efficient. Aim to complete tasks in the least number of steps.\n\nRespond
      with only valid JSON conforming to the following schema: \n{\"$schema\": \"http://json-schema.org/draft-07/schema#\",
      \"type\": \"object\", \"properties\": {\"thoughts\": {\"type\": \"object\",
      \"properties\": {\"text\": {\"type\": \"string\", \"description\": \"thoughts\"},
      \"reasoning\": {\"type\": \"string\"}, \"plan\": {\"type\": \"string\", \"description\":
      \"- short bulleted\\n- list that conveys\\n- long-term plan\"}, \"criticism\":
      {\"type\": \"string\", \"description\": \"constructive self-criticism\"}, \"speak\":
      {\"type\": \"string\", \"description\": \"thoughts summary to say to user\"}},
      \"required\": [\"text\", \"reasoning\", \"plan\", \"criticism\", \"speak\"],
      \"additionalProperties\": false}, \"command\": {\"type\": \"object\", \"properties\":
      {\"name\": {\"type\": \"string\"}, \"args\": {\"type\": \"object\"}}, \"required\":
      [\"name\", \"args\"], \"additionalProperties\": false}}, \"required\": [\"thoughts\",
      \"command\"], \"additionalProperties\": false}\n"}, {"role": "system", "content":
      "The current time and date is Tue Jan  1 00:00:00 2000"}, {"role": "system",
      "content": "This reminds you of these events from your past: \nI was created"},
      {"role": "user", "content": "Determine exactly one command to use, and respond
      using the JSON schema specified previously:"}, {"role": "assistant", "content":
      "{\n  \"thoughts\": {\n    \"text\": \"To write ''Hello World'' into a file
      named ''hello_world.txt'', I can use the ''write_to_file'' command.\",\n    \"reasoning\":
      \"The ''write_to_file'' command allows me to write text into a file.\",\n    \"plan\":
      \"- Use the ''write_to_file'' command to write ''Hello World'' into a file named
      ''hello_world.txt''.\",\n    \"criticism\": \"I don''t have any criticism for
      this plan.\",\n    \"speak\": \"I will use the ''write_to_file'' command to
      write ''Hello World'' into a file named ''hello_world.txt''.\"\n  },\n  \"command\":
      {\n    \"name\": \"write_to_file\",\n    \"args\": {\n      \"filename\": \"hello_world.txt\",\n      \"text\":
      \"Hello World\"\n    }\n  }\n}"}, {"role": "system", "content": "Command write_to_file
      returned: File written to successfully."}, {"role": "user", "content": "Determine
      exactly one command to use, and respond using the JSON schema specified previously:"}],
      "model": "gpt-3.5-turbo", "temperature": 0, "max_tokens": 0}'
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '4686'
      Content-Type:
      - application/json
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6RTS4/aMBC+8ytGvuQSEI9ledy3Kurj0l2tqqZCxhmIu7YnsodChfLfKycBQqV2
        teolh/nmezj65tQDEDoXSxCqkKxsafqzr3iwoy8Pn5+fFpuPU//4aTV797AtZ8cPzok0MmjzAxWf
        WQNFtjTImlpYeZSMUXV0P5/fLe4Ww3kNWMrRRNqu5P5kMO3z3m+oP7wfTVpmQVphEEv41gMAONXf
        mNHleBRLGKbnicUQ5A7F8rIEIDyZOBEyBB1YOhbpFVTkGF0d+5Q5gExwQftdwSGLKnFUD/HIcZCJ
        R4KD14yQvEdjCJ7JmzwB7ZhAwlYbBCct5pAUEV8fIj7gIycprEBJB/uAwAVCUuusmdaRlYAia6XL
        B5lIz7YeZSCn3a71/jsLpDF0CGAR+Jwwhu4G6yqXRrpGtA9P/w50FXzzk7uOymvWSgfb2K4gJ5cw
        FPIngnS/4ILDljxwoQPEkF2JUKJ8OdMP2pjX/uX/RY+2Vdq0ohW8KUVkNmlu3DuBpd91exRHceNK
        /MP1Qr3tXCd7kwqgqsNlrhJtl6vLEWy106FYN92JxQ5MZbNW9QC+10e1v7kTUXqyJa+ZXtDFSxsN
        p+NGUFwPuQPP25sTTCxNBxhPxr3oU/V+AwAA//8DABGJAxZHBAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 7e1963d82ebf6822-SEA
      Cache-Control:
      - no-cache, must-revalidate
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 04 Jul 2023 18:21:52 GMT
      Server:
      - cloudflare
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - gpt-3.5-turbo-0613
      openai-organization:
      - user-f2nm2e6pozoftncap0fltljz
      openai-processing-ms:
      - '3958'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-ratelimit-limit-requests:
      - '3500'
      x-ratelimit-limit-tokens:
      - '90000'
      x-ratelimit-remaining-requests:
      - '3499'
      x-ratelimit-remaining-tokens:
      - '86427'
      x-ratelimit-reset-requests:
      - 17ms
      x-ratelimit-reset-tokens:
      - 2.382s
      x-request-id:
      - 33e33aa162dc6da0ee6c4e21a3725242
    status:
      code: 200
      message: OK
version: 1
