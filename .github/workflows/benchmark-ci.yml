name: Benchmark CI

on:
  push:
    branches: [master, ci-test*]
    paths:
      - 'benchmark/**'
      - .github/workflows/benchmark-ci.yml
      - '!benchmark/reports/**'
  pull_request:
    branches: [stable, master, release-*]
    paths:
      - 'benchmark/**'
      - '!benchmark/reports/**'
      - .github/workflows/benchmark-ci.yml

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        agent-name: [ forge ]
      fail-fast: false
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          submodules: true

      - name: Set up Python ${{ env.min-python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.min-python-version }}

      - name: Install Poetry
        working-directory: ./autogpts/${{ matrix.agent-name }}/
        run: |
          curl -sSL https://install.python-poetry.org | python -

      - name: Run regression tests
        working-directory: ./autogpts/${{ matrix.agent-name }}/
        run: |
          sh run &          
          set +e # Ignore non-zero exit codes and continue execution
          echo "Running the following command: ${prefix}agbenchmark --maintain --mock"
          prefix="poetry run "

          ${prefix}agbenchmark --maintain --mock
          EXIT_CODE=$?
          set -e  # Stop ignoring non-zero exit codes
          # Check if the exit code was 5, and if so, exit with 0 instead
          if [ $EXIT_CODE -eq 5 ]; then
            echo "regression_tests.json is empty."
          fi

          echo "Running the following command: ${prefix}agbenchmark --mock"
          ${prefix}agbenchmark --mock

          echo "Running the following command: ${prefix}agbenchmark --mock --category=retrieval"
          ${prefix}agbenchmark --mock --category=retrieval

          echo "Running the following command: ${prefix}agbenchmark --mock --category=interface"
          ${prefix}agbenchmark --mock --category=interface

          echo "Running the following command: ${prefix}agbenchmark --mock --category=code"
          ${prefix}agbenchmark --mock --category=code

          echo "Running the following command: ${prefix}agbenchmark --mock --category=memory"
          ${prefix}agbenchmark --mock --category=memory

          echo "Running the following command: ${prefix}agbenchmark --mock --suite TestRevenueRetrieval"
          ${prefix}agbenchmark --mock --suite TestRevenueRetrieval

          echo "Running the following command: ${prefix}agbenchmark --test=TestWriteFile"
          ${prefix}agbenchmark --test=TestWriteFile

          poetry install
          poetry run uvicorn server:app --reload &
          sleep 5
          echo "poetry run agbenchmark --mock --api_mode --host=http://localhost:8000"
          poetry run agbenchmark --mock --api_mode --host=http://localhost:8000
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
